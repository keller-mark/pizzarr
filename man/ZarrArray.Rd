% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zarr-array.R
\docType{class}
\name{ZarrArray}
\alias{ZarrArray}
\title{ZarrArray Class}
\value{
A subset of the array, as a NestedArray instance.
}
\description{
Instantiate an array from an initialized store.
}
\details{
The Zarr Array class.
}
\keyword{(default),}
\keyword{Array}
\keyword{False}
\keyword{False,}
\keyword{If}
\keyword{Object,}
\keyword{Separate}
\keyword{Storage}
\keyword{String,}
\keyword{TODO}
\keyword{True}
\keyword{True,}
\keyword{`store`}
\keyword{a}
\keyword{access}
\keyword{against}
\keyword{all}
\keyword{and}
\keyword{array}
\keyword{array's}
\keyword{attributes}
\keyword{attrs}
\keyword{be}
\keyword{both}
\keyword{cache_attrs}
\keyword{cache_metadata}
\keyword{cached.}
\keyword{chunk}
\keyword{chunk's}
\keyword{chunk_store}
\keyword{chunks}
\keyword{chunks.}
\keyword{compared}
\keyword{compressor}
\keyword{configuration}
\keyword{contents.}
\keyword{data}
\keyword{deleted.}
\keyword{dimension_separator}
\keyword{dtype}
\keyword{each}
\keyword{entry}
\keyword{equal}
\keyword{fill}
\keyword{fill_value}
\keyword{filters}
\keyword{for}
\keyword{if}
\keyword{internal}
\keyword{is}
\keyword{is_view}
\keyword{key}
\keyword{key_prefix}
\keyword{meta}
\keyword{metadata}
\keyword{metadata.}
\keyword{modification.}
\keyword{not}
\keyword{of}
\keyword{oindex}
\keyword{optional.}
\keyword{order}
\keyword{path}
\keyword{path.}
\keyword{prior}
\keyword{protected}
\keyword{provided,}
\keyword{read_only}
\keyword{regardless}
\keyword{reloaded}
\keyword{shape}
\keyword{should}
\keyword{storage}
\keyword{store}
\keyword{stored}
\keyword{stored,}
\keyword{storing.}
\keyword{synchronizer}
\keyword{synchronizer.}
\keyword{that}
\keyword{the}
\keyword{their}
\keyword{then}
\keyword{to}
\keyword{uniformly}
\keyword{used}
\keyword{user}
\keyword{value}
\keyword{value,}
\keyword{vindex}
\keyword{will}
\keyword{write_empty_chunks}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ZarrArray-new}{\code{ZarrArray$new()}}
\item \href{#method-ZarrArray-get_store}{\code{ZarrArray$get_store()}}
\item \href{#method-ZarrArray-get_path}{\code{ZarrArray$get_path()}}
\item \href{#method-ZarrArray-get_name}{\code{ZarrArray$get_name()}}
\item \href{#method-ZarrArray-get_basename}{\code{ZarrArray$get_basename()}}
\item \href{#method-ZarrArray-get_read_only}{\code{ZarrArray$get_read_only()}}
\item \href{#method-ZarrArray-set_read_only}{\code{ZarrArray$set_read_only()}}
\item \href{#method-ZarrArray-get_chunk_store}{\code{ZarrArray$get_chunk_store()}}
\item \href{#method-ZarrArray-get_shape}{\code{ZarrArray$get_shape()}}
\item \href{#method-ZarrArray-set_shape}{\code{ZarrArray$set_shape()}}
\item \href{#method-ZarrArray-resize}{\code{ZarrArray$resize()}}
\item \href{#method-ZarrArray-get_chunks}{\code{ZarrArray$get_chunks()}}
\item \href{#method-ZarrArray-get_dtype}{\code{ZarrArray$get_dtype()}}
\item \href{#method-ZarrArray-get_compressor}{\code{ZarrArray$get_compressor()}}
\item \href{#method-ZarrArray-get_fill_value}{\code{ZarrArray$get_fill_value()}}
\item \href{#method-ZarrArray-set_fill_value}{\code{ZarrArray$set_fill_value()}}
\item \href{#method-ZarrArray-get_order}{\code{ZarrArray$get_order()}}
\item \href{#method-ZarrArray-get_filters}{\code{ZarrArray$get_filters()}}
\item \href{#method-ZarrArray-get_synchronizer}{\code{ZarrArray$get_synchronizer()}}
\item \href{#method-ZarrArray-get_attrs}{\code{ZarrArray$get_attrs()}}
\item \href{#method-ZarrArray-get_ndim}{\code{ZarrArray$get_ndim()}}
\item \href{#method-ZarrArray-get_size}{\code{ZarrArray$get_size()}}
\item \href{#method-ZarrArray-get_itemsize}{\code{ZarrArray$get_itemsize()}}
\item \href{#method-ZarrArray-get_nbytes}{\code{ZarrArray$get_nbytes()}}
\item \href{#method-ZarrArray-get_nbytes_stored}{\code{ZarrArray$get_nbytes_stored()}}
\item \href{#method-ZarrArray-get_cdata_shape}{\code{ZarrArray$get_cdata_shape()}}
\item \href{#method-ZarrArray-get_nchunks}{\code{ZarrArray$get_nchunks()}}
\item \href{#method-ZarrArray-get_nchunks_initialized}{\code{ZarrArray$get_nchunks_initialized()}}
\item \href{#method-ZarrArray-get_is_view}{\code{ZarrArray$get_is_view()}}
\item \href{#method-ZarrArray-get_oindex}{\code{ZarrArray$get_oindex()}}
\item \href{#method-ZarrArray-get_vindex}{\code{ZarrArray$get_vindex()}}
\item \href{#method-ZarrArray-get_write_empty_chunks}{\code{ZarrArray$get_write_empty_chunks()}}
\item \href{#method-ZarrArray-equals}{\code{ZarrArray$equals()}}
\item \href{#method-ZarrArray-islice}{\code{ZarrArray$islice()}}
\item \href{#method-ZarrArray-length}{\code{ZarrArray$length()}}
\item \href{#method-ZarrArray-get_item}{\code{ZarrArray$get_item()}}
\item \href{#method-ZarrArray-get_basic_selection}{\code{ZarrArray$get_basic_selection()}}
\item \href{#method-ZarrArray-get_orthogonal_selection}{\code{ZarrArray$get_orthogonal_selection()}}
\item \href{#method-ZarrArray-get_coordinate_selection}{\code{ZarrArray$get_coordinate_selection()}}
\item \href{#method-ZarrArray-get_mask_selection}{\code{ZarrArray$get_mask_selection()}}
\item \href{#method-ZarrArray-set_item}{\code{ZarrArray$set_item()}}
\item \href{#method-ZarrArray-set_basic_selection}{\code{ZarrArray$set_basic_selection()}}
\item \href{#method-ZarrArray-set_orthogonal_selection}{\code{ZarrArray$set_orthogonal_selection()}}
\item \href{#method-ZarrArray-set_coordinate_selection}{\code{ZarrArray$set_coordinate_selection()}}
\item \href{#method-ZarrArray-set_mask_selection}{\code{ZarrArray$set_mask_selection()}}
\item \href{#method-ZarrArray-get_info}{\code{ZarrArray$get_info()}}
\item \href{#method-ZarrArray-get_digest}{\code{ZarrArray$get_digest()}}
\item \href{#method-ZarrArray-get_hexdigest}{\code{ZarrArray$get_hexdigest()}}
\item \href{#method-ZarrArray-append}{\code{ZarrArray$append()}}
\item \href{#method-ZarrArray-view}{\code{ZarrArray$view()}}
\item \href{#method-ZarrArray-astype}{\code{ZarrArray$astype()}}
\item \href{#method-ZarrArray-get_dimension_separator}{\code{ZarrArray$get_dimension_separator()}}
\item \href{#method-ZarrArray-[}{\code{ZarrArray$[()}}
\item \href{#method-ZarrArray-[<-}{\code{ZarrArray$[<-()}}
\item \href{#method-ZarrArray-as.array}{\code{ZarrArray$as.array()}}
\item \href{#method-ZarrArray-clone}{\code{ZarrArray$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-new"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-new}{}}}
\subsection{Method \code{new()}}{
(Re)load metadata from store.


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


TODO


Create a new Array instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$new(
  store,
  path = NA,
  read_only = FALSE,
  chunk_store = NA,
  synchronizer = NA,
  cache_metadata = TRUE,
  cache_attrs = TRUE,
  write_empty_chunks = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{store}}{Array store already initialized.}

\item{\code{path}}{character path}

\item{\code{read_only}}{logical read only?}

\item{\code{chunk_store}}{TODO}

\item{\code{synchronizer}}{TODO}

\item{\code{cache_metadata}}{logical cache metadata?}

\item{\code{cache_attrs}}{logical cache attributes?}

\item{\code{write_empty_chunks}}{logical write empty chunks?}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An \code{Array} instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_store"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_store}{}}}
\subsection{Method \code{get_store()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_store()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_path"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_path}{}}}
\subsection{Method \code{get_path()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_path()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_name"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_name}{}}}
\subsection{Method \code{get_name()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_name()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_basename"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_basename}{}}}
\subsection{Method \code{get_basename()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_basename()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_read_only"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_read_only}{}}}
\subsection{Method \code{get_read_only()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_read_only()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-set_read_only"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-set_read_only}{}}}
\subsection{Method \code{set_read_only()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$set_read_only(val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{val}}{value to set}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_chunk_store"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_chunk_store}{}}}
\subsection{Method \code{get_chunk_store()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_chunk_store()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_shape"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_shape}{}}}
\subsection{Method \code{get_shape()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_shape()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-set_shape"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-set_shape}{}}}
\subsection{Method \code{set_shape()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$set_shape(value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{numeric size to set}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-resize"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-resize}{}}}
\subsection{Method \code{resize()}}{
Change the shape of the array by growing or shrinking one or more dimensions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$resize(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{arguments for do.call}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_chunks"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_chunks}{}}}
\subsection{Method \code{get_chunks()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_chunks()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_dtype"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_dtype}{}}}
\subsection{Method \code{get_dtype()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_dtype()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_compressor"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_compressor}{}}}
\subsection{Method \code{get_compressor()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_compressor()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_fill_value"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_fill_value}{}}}
\subsection{Method \code{get_fill_value()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_fill_value()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-set_fill_value"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-set_fill_value}{}}}
\subsection{Method \code{set_fill_value()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$set_fill_value(val)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{val}}{fill value to use}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_order"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_order}{}}}
\subsection{Method \code{get_order()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_order()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_filters"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_filters}{}}}
\subsection{Method \code{get_filters()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_filters()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_synchronizer"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_synchronizer}{}}}
\subsection{Method \code{get_synchronizer()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_synchronizer()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_attrs"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_attrs}{}}}
\subsection{Method \code{get_attrs()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_attrs()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_ndim"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_ndim}{}}}
\subsection{Method \code{get_ndim()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_ndim()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_size"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_size}{}}}
\subsection{Method \code{get_size()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_size()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_itemsize"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_itemsize}{}}}
\subsection{Method \code{get_itemsize()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_itemsize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_nbytes"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_nbytes}{}}}
\subsection{Method \code{get_nbytes()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_nbytes()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_nbytes_stored"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_nbytes_stored}{}}}
\subsection{Method \code{get_nbytes_stored()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_nbytes_stored()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_cdata_shape"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_cdata_shape}{}}}
\subsection{Method \code{get_cdata_shape()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_cdata_shape()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_nchunks"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_nchunks}{}}}
\subsection{Method \code{get_nchunks()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_nchunks()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_nchunks_initialized"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_nchunks_initialized}{}}}
\subsection{Method \code{get_nchunks_initialized()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_nchunks_initialized()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_is_view"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_is_view}{}}}
\subsection{Method \code{get_is_view()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_is_view()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_oindex"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_oindex}{}}}
\subsection{Method \code{get_oindex()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_oindex()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_vindex"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_vindex}{}}}
\subsection{Method \code{get_vindex()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_vindex()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_write_empty_chunks"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_write_empty_chunks}{}}}
\subsection{Method \code{get_write_empty_chunks()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_write_empty_chunks()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-equals"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-equals}{}}}
\subsection{Method \code{equals()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$equals(other)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{other}}{other object to check}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-islice"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-islice}{}}}
\subsection{Method \code{islice()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$islice(start = NA, end = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{start}}{start of slice}

\item{\code{end}}{end of slice}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-length"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-length}{}}}
\subsection{Method \code{length()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$length()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_item"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_item}{}}}
\subsection{Method \code{get_item()}}{
Subset the array.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_item(selection)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_basic_selection"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_basic_selection}{}}}
\subsection{Method \code{get_basic_selection()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_basic_selection(selection = NA, out = NA, fields = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{out}}{TODO}

\item{\code{fields}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_orthogonal_selection"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_orthogonal_selection}{}}}
\subsection{Method \code{get_orthogonal_selection()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_orthogonal_selection(selection = NA, out = NA, fields = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{out}}{TODO}

\item{\code{fields}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_coordinate_selection"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_coordinate_selection}{}}}
\subsection{Method \code{get_coordinate_selection()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_coordinate_selection(selection = NA, out = NA, fields = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{out}}{TODO}

\item{\code{fields}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_mask_selection"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_mask_selection}{}}}
\subsection{Method \code{get_mask_selection()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_mask_selection(selection = NA, out = NA, fields = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{out}}{TODO}

\item{\code{fields}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-set_item"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-set_item}{}}}
\subsection{Method \code{set_item()}}{
Set a subset of the array.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$set_item(selection, value)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{value}}{The value to set, as an R array() or a Zarr NestedArray instance.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-set_basic_selection"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-set_basic_selection}{}}}
\subsection{Method \code{set_basic_selection()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$set_basic_selection(selection, value, fields = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{value}}{TODO}

\item{\code{fields}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-set_orthogonal_selection"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-set_orthogonal_selection}{}}}
\subsection{Method \code{set_orthogonal_selection()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$set_orthogonal_selection(selection, value, fields = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{value}}{TODO}

\item{\code{fields}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-set_coordinate_selection"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-set_coordinate_selection}{}}}
\subsection{Method \code{set_coordinate_selection()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$set_coordinate_selection(selection, value, fields = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{value}}{TODO}

\item{\code{fields}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-set_mask_selection"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-set_mask_selection}{}}}
\subsection{Method \code{set_mask_selection()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$set_mask_selection(selection, value, fields = NA)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{selection}}{Selections are lists containing either scalars, strings, or Slice objects.}

\item{\code{value}}{TODO}

\item{\code{fields}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_info"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_info}{}}}
\subsection{Method \code{get_info()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_info()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_digest"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_digest}{}}}
\subsection{Method \code{get_digest()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_digest(hashname = "sha1")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{hashname}}{name of hash}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_hexdigest"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_hexdigest}{}}}
\subsection{Method \code{get_hexdigest()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_hexdigest(hashname = "sha1")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{hashname}}{name of hash}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-append"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-append}{}}}
\subsection{Method \code{append()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$append(data, axis = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{data to append}

\item{\code{axis}}{axis to append}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-view"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-view}{}}}
\subsection{Method \code{view()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$view(
  shape = NA,
  chunks = NA,
  dtype = NA,
  fill_value = NA,
  filters = NA,
  read_only = NA,
  synchronizer = NA
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{shape}}{TODO}

\item{\code{chunks}}{TODO}

\item{\code{dtype}}{TODO}

\item{\code{fill_value}}{TODO}

\item{\code{filters}}{TODO}

\item{\code{read_only}}{TODO}

\item{\code{synchronizer}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-astype"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-astype}{}}}
\subsection{Method \code{astype()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$astype(dtype)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dtype}}{TODO}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-get_dimension_separator"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-get_dimension_separator}{}}}
\subsection{Method \code{get_dimension_separator()}}{
TODO
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$get_dimension_separator()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-["></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-[}{}}}
\subsection{Method \code{[()}}{
Set values for a selection using bracket notation (for S3 method).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$[(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Contains the slicing parameters, one for each dimension.
Use empty space to get whole dimension e.g. \link{1:5,,}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Sliced Zarr object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-[<-"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-[<-}{}}}
\subsection{Method \code{[<-()}}{
Assign values for a selection using bracket notation (for S3 method).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$[<-(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Contains the slicing parameters, one for each dimension.
Use empty space to get whole dimension e.g. \link{1:5,,}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-as.array"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-as.array}{}}}
\subsection{Method \code{as.array()}}{
Convert Zarr object to R array (for S3 method). Note that this loads all data into memory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$as.array()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
array
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ZarrArray-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ZarrArray-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ZarrArray$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
