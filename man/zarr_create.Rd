% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/creation.R
\name{zarr_create}
\alias{zarr_create}
\title{Create an empty array}
\usage{
zarr_create(
  shape,
  chunks = TRUE,
  dtype = NA,
  compressor = NA,
  fill_value = NA,
  order = NA,
  store = NA,
  synchronizer = NA,
  overwrite = FALSE,
  path = NA,
  chunk_store = NA,
  filters = NA,
  cache_metadata = TRUE,
  cache_attrs = TRUE,
  read_only = FALSE,
  object_codec = NA,
  dimension_separator = NA,
  write_empty_chunks = TRUE
)
}
\arguments{
\item{shape}{: int or tuple of ints
Array shape.}

\item{chunks}{: int or tuple of ints, optional
Chunk shape. If True, will be guessed from \code{shape} and \code{dtype}. If
False, will be set to \code{shape}, i.e., single chunk for the whole array.
If an int, the chunk size in each dimension will be given by the value
of \code{chunks}. Default is True.}

\item{dtype}{: string or dtype, optional
NumPy dtype.}

\item{compressor}{: Codec, optional
Primary compressor.}

\item{fill_value}{: object
Default value to use for uninitialized portions of the array.}

\item{order}{: {'C', 'F'}, optional
Memory layout to be used within each chunk.}

\item{store}{: MutableMapping or string
Store or path to directory in file system or name of zip file.}

\item{synchronizer}{: object, optional
Array synchronizer.}

\item{overwrite}{: bool, optional
If True, delete all pre-existing data in \code{store} at \code{path} before
creating the array.}

\item{path}{: string, optional
Path under which array is stored.}

\item{chunk_store}{: MutableMapping, optional
Separate storage for chunks. If not provided, \code{store} will be used
for storage of both chunks and metadata.}

\item{filters}{: sequence of Codecs, optional}

\item{cache_metadata}{: bool, optional
If True, array configuration metadata will be cached for the
lifetime of the object. If False, array metadata will be reloaded
prior to all data access and modification operations (may incur
overhead depending on storage and data access pattern).}

\item{cache_attrs}{: bool, optional
If True (default), user attributes will be cached for attribute read
operations. If False, user attributes are reloaded from the store prior
to all attribute read operations.}

\item{read_only}{: bool, optional
True if array should be protected against modification.}

\item{object_codec}{: Codec, optional
A codec to encode object arrays, only needed if dtype=object.}

\item{dimension_separator}{: {'.', '/'}, optional
Separator placed between the dimensions of a chunk.}

\item{write_empty_chunks}{: bool, optional
If True (default), all chunks will be stored regardless of their
contents. If False, each chunk is compared to the array's fill value
prior to storing. If a chunk is uniformly equal to the fill value, then
that chunk is not be stored, and the store entry for that chunk's key
is deleted. This setting enables sparser storage, as only chunks with
non-fill-value data are stored, at the expense of overhead associated
with checking the data of each chunk.}
}
\value{
ZarrArray
}
\description{
Create an empty array
}
